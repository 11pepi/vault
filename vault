#!/bin/python3
# pylint: disable=import-outside-toplevel
'''
The package manager's main executable
'''
import argparse
import windows  # pylint: disable=unused-import
root_parser = argparse.ArgumentParser(
    prog="vault",
    formatter_class=argparse.RawTextHelpFormatter
)
root_parser.add_argument("--prefix", default="vaults")
command_subparsers = root_parser.add_subparsers(dest="operation", required=True)

########## get command
get_parser = command_subparsers.add_parser("get")

## Sources for get
get_source = get_parser.add_mutually_exclusive_group(required=True)
get_source.add_argument("--remote", "-r", action="store_true")
get_source.add_argument("--directory", "-d", action="store_true")

## Package is specified after
get_parser.add_argument("package")

########## bye command
bye_parser = command_subparsers.add_parser("bye")
bye_parser.add_argument("package")

########## setup command
setup_parser = command_subparsers.add_parser("setup")

########## setup command's evil sister arson
arson_parser = command_subparsers.add_parser("arson")

args = root_parser.parse_args()

def cmd_setup():
    '''
    set up the db
    '''
    import setup  # os.system is very unsafe!
    setup.set_up_vault(False)

def cmd_arson():
    '''
    arson the whole db
    '''
    import setup  # safer
    setup.set_up_vault(True)  # I think this is what you wanted it to do??

def cmd_get(arguments):
    '''
    get a package
    '''
    print(f"[get] Attempt to get {arguments.package}")
    import pkginstall
    if arguments.directory:
        pkginstall.start(
            arguments.package,
            arguments.prefix
        )
    print("[get] Done (it might've worked, idk)")

def cmd_bye(arguments):
    '''
    delete a package
    '''
    print(f"[bye] Attempt to remove {args.package}")
    import pkgremove
    pkgremove.start(
        arguments.package,
        arguments.prefix
    )
    print("[bye] Done (it might've worked, idk)")

def operation_not_supported():
    '''
    Called when an operation is not supported
    '''
    print("[vault] operation not supported.")
    quit(127)

match args.operation:
    case "setup": cmd_setup()
    case "arson": cmd_arson()
    case "get": cmd_get(args)
    case "bye": cmd_bye(args)
    case "fix": operation_not_supported()
    case "what": operation_not_supported()
    case "has": operation_not_supported()
    case "miku": print("Miku, miku, you can call me miku.")
